/*
 * This file is generated by jOOQ.
 */
package com.divitbui.generated.tables.daos;


import com.divitbui.generated.enums.AccountType;
import com.divitbui.generated.tables.Account;
import com.divitbui.generated.tables.records.AccountRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountDao extends DAOImpl<AccountRecord, com.divitbui.generated.tables.pojos.Account, UUID> {

    /**
     * Create a new AccountDao without any configuration
     */
    public AccountDao() {
        super(Account.ACCOUNT, com.divitbui.generated.tables.pojos.Account.class);
    }

    /**
     * Create a new AccountDao with an attached configuration
     */
    public AccountDao(Configuration configuration) {
        super(Account.ACCOUNT, com.divitbui.generated.tables.pojos.Account.class, configuration);
    }

    @Override
    public UUID getId(com.divitbui.generated.tables.pojos.Account object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Account.ACCOUNT.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchByUuid(UUID... values) {
        return fetch(Account.ACCOUNT.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public com.divitbui.generated.tables.pojos.Account fetchOneByUuid(UUID value) {
        return fetchOne(Account.ACCOUNT.UUID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchByName(String... values) {
        return fetch(Account.ACCOUNT.NAME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchRangeOfType(AccountType lowerInclusive, AccountType upperInclusive) {
        return fetchRange(Account.ACCOUNT.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchByType(AccountType... values) {
        return fetch(Account.ACCOUNT.TYPE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchByEmail(String... values) {
        return fetch(Account.ACCOUNT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchByUserId(String... values) {
        return fetch(Account.ACCOUNT.USER_ID, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Account.ACCOUNT.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.divitbui.generated.tables.pojos.Account> fetchByCreated(LocalDateTime... values) {
        return fetch(Account.ACCOUNT.CREATED, values);
    }
}
