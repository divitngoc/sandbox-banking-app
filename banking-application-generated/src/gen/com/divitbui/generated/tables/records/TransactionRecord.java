/*
 * This file is generated by jOOQ.
 */
package com.divitbui.generated.tables.records;


import com.divitbui.generated.tables.Transaction;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record8<UUID, UUID, String, BigDecimal, String, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>transaction.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>transaction.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>transaction.account_uuid</code>.
     */
    public void setAccountUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>transaction.account_uuid</code>.
     */
    public UUID getAccountUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>transaction.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>transaction.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>transaction.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>transaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>transaction.currency_code</code>.
     */
    public void setCurrencyCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>transaction.currency_code</code>.
     */
    public String getCurrencyCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>transaction.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>transaction.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>transaction.payee_name</code>.
     */
    public void setPayeeName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>transaction.payee_name</code>.
     */
    public String getPayeeName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>transaction.payer_name</code>.
     */
    public void setPayerName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>transaction.payer_name</code>.
     */
    public String getPayerName() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, String, BigDecimal, String, LocalDateTime, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, String, BigDecimal, String, LocalDateTime, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Transaction.TRANSACTION.UUID;
    }

    @Override
    public Field<UUID> field2() {
        return Transaction.TRANSACTION.ACCOUNT_UUID;
    }

    @Override
    public Field<String> field3() {
        return Transaction.TRANSACTION.DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Transaction.TRANSACTION.AMOUNT;
    }

    @Override
    public Field<String> field5() {
        return Transaction.TRANSACTION.CURRENCY_CODE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Transaction.TRANSACTION.DATE;
    }

    @Override
    public Field<String> field7() {
        return Transaction.TRANSACTION.PAYEE_NAME;
    }

    @Override
    public Field<String> field8() {
        return Transaction.TRANSACTION.PAYER_NAME;
    }

    @Override
    public UUID component1() {
        return getUuid();
    }

    @Override
    public UUID component2() {
        return getAccountUuid();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public String component5() {
        return getCurrencyCode();
    }

    @Override
    public LocalDateTime component6() {
        return getDate();
    }

    @Override
    public String component7() {
        return getPayeeName();
    }

    @Override
    public String component8() {
        return getPayerName();
    }

    @Override
    public UUID value1() {
        return getUuid();
    }

    @Override
    public UUID value2() {
        return getAccountUuid();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public String value5() {
        return getCurrencyCode();
    }

    @Override
    public LocalDateTime value6() {
        return getDate();
    }

    @Override
    public String value7() {
        return getPayeeName();
    }

    @Override
    public String value8() {
        return getPayerName();
    }

    @Override
    public TransactionRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public TransactionRecord value2(UUID value) {
        setAccountUuid(value);
        return this;
    }

    @Override
    public TransactionRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TransactionRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionRecord value5(String value) {
        setCurrencyCode(value);
        return this;
    }

    @Override
    public TransactionRecord value6(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public TransactionRecord value7(String value) {
        setPayeeName(value);
        return this;
    }

    @Override
    public TransactionRecord value8(String value) {
        setPayerName(value);
        return this;
    }

    @Override
    public TransactionRecord values(UUID value1, UUID value2, String value3, BigDecimal value4, String value5, LocalDateTime value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(UUID uuid, UUID accountUuid, String description, BigDecimal amount, String currencyCode, LocalDateTime date, String payeeName, String payerName) {
        super(Transaction.TRANSACTION);

        setUuid(uuid);
        setAccountUuid(accountUuid);
        setDescription(description);
        setAmount(amount);
        setCurrencyCode(currencyCode);
        setDate(date);
        setPayeeName(payeeName);
        setPayerName(payerName);
    }
}
