{
	"info": {
		"_postman_id": "13f6b89f-6020-40b8-897b-2beb1267f620",
		"name": "Banking Application e2e API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "IAM",
			"item": [
				{
					"name": "Create User",
					"item": [
						{
							"name": "Authorize admin via password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Authorize admin via password\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.collectionVariables.set(\"access_token\", data.access_token);\r",
											"pm.collectionVariables.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "admin-cli",
											"type": "text"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:8180/auth/realms/master/protocol/openid-connect/token",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8180",
									"path": [
										"auth",
										"realms",
										"master",
										"protocol",
										"openid-connect",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create user\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var data = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"username\", data.email);\r",
											"pm.collectionVariables.set(\"password\", data.credentials[0].value);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"test@test.com\",\r\n    \"enabled\": \"true\",\r\n    \"realmRoles\": [\r\n        \"user\"\r\n    ],\r\n    \"credentials\": [\r\n       {\r\n           \"type\": \"password\",\r\n           \"value\": \"password\",\r\n           \"temporary\": false\r\n       }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8180/auth/admin/realms/banking-app/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8180",
									"path": [
										"auth",
										"admin",
										"realms",
										"banking-app",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Token",
					"item": [
						{
							"name": "Authorize User via UserPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Authorize via password test\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.collectionVariables.set(\"access_token\", data.access_token);\r",
											"pm.collectionVariables.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:8180/auth/realms/banking-app/protocol/openid-connect/token",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8180",
									"path": [
										"auth",
										"realms",
										"banking-app",
										"protocol",
										"openid-connect",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh Access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Refresh token test\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.collectionVariables.set(\"access_token\", data.access_token);\r",
											"pm.collectionVariables.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:8180/auth/realms/banking-app/protocol/openid-connect/token",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8180",
									"path": [
										"auth",
										"realms",
										"banking-app",
										"protocol",
										"openid-connect",
										"token"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Identity",
			"item": [
				{
					"name": "Get Identity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.test(\"Get Identity test\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody(\"userName\");\r",
									"});\r",
									"pm.expect(\"user1\", data.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/identity",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"identity"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AIS",
			"item": [
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.test(\"Create Accounts test\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody(\"accountId\");\r",
									"});\r",
									"pm.collectionVariables.set(\"account_id\", data.accountId);\r",
									"pm.collectionVariables.set(\"currency_code\", data.balances[0].amount.currencyCode);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"PERSONAL\",\r\n    \"amount\": {\r\n        \"value\": 200.00,\r\n        \"currencyCode\": \"USD\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/accounts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.test(\"Get Accounts test\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"account_id\", data.accounts[0].accountId);\r",
									"pm.collectionVariables.set(\"currency_code\", data.accounts[0].balances[0].amount.currencyCode);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/accounts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transfer money",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Transfer test\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"toAccountId\" : \"98d9fa19-b1fb-4243-b828-c9c6b0988bd2\",\r\n    \"name\": \"Divit\",\r\n    \"description\": \"Test run\",\r\n    \"amount\": {\r\n        \"value\": 100,\r\n        \"currencyCode\": \"USD\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/accounts/{{account_id}}/transfer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"accounts",
								"{{account_id}}",
								"transfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.test(\"Get account transactions test\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/accounts/{{account_id}}/transactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"accounts",
								"{{account_id}}",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.test(\"Get all transactions test\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/transactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.test(\"Get Account and Balance test\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(data.balances[0].amount.value).is.to.equal(100.00);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/accounts/{{account_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "refresh_token",
			"value": ""
		},
		{
			"key": "client_id",
			"value": "banking-api"
		},
		{
			"key": "account_id",
			"value": ""
		},
		{
			"key": "currency_code",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		}
	]
}